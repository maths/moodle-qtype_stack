"use strict";let DISABLE_CHANGES={};let INPUT_PROMISES={};let FETCH_PROMISES={};let BUTTON_CALLBACKS={};let do_connect=null;let is_connected=false;const CONNECTED=new Promise((resolve,reject)=>{do_connect=resolve});CONNECTED.then(b=>{is_connected=true});const pinger=setInterval(()=>{if(!is_connected){const msg={version:"STACK-JS:1.0.0",type:"ping",src:FRAME_ID};window.parent.postMessage(JSON.stringify(msg),"*")}},10);let _receive_submit_button=null;let SUBMIT_BUTTON=null;window.addEventListener("message",e=>{if(!(typeof e.data==="string"||e.data instanceof String)){return}let msg=null;try{msg=JSON.parse(e.data)}catch(e){return}if(!("version"in msg&&msg.version.startsWith("STACK-JS"))){return}if(!("tgt"in msg&&"type"in msg&&msg.tgt===FRAME_ID)){return}switch(msg.type){case"initial-input":const element=document.getElementById(msg.name);DISABLE_CHANGES[msg.name]=true;element.value=msg.value;if(msg["input-readonly"]){element.setAttribute("readonly","readonly")}if(msg["input-dataset"]){Object.keys(msg["input-dataset"]).forEach(function(key){element.dataset[key]=msg["input-dataset"][key]})}DISABLE_CHANGES[msg.name]=false;INPUT_PROMISES[msg.name](element.id);delete INPUT_PROMISES[msg.name];break;case"changed-input":const input=document.getElementById(msg.name);DISABLE_CHANGES[msg.name]=true;input.value=msg.value;const c=new Event("change");input.dispatchEvent(c);DISABLE_CHANGES[msg.name]=false;break;case"button-click":if(msg.name in BUTTON_CALLBACKS){BUTTON_CALLBACKS[msg.name].forEach(callbackfunction=>{callbackfunction(msg.name)})}break;case"xfer-content":if(msg.target in FETCH_PROMISES){FETCH_PROMISES[msg.target](msg.content);delete FETCH_PROMISES[msg.target]}break;case"ping":clearInterval(pinger);do_connect(true);break;case"submit-button-info":_receive_submit_button(msg.value);break;case"error":default:let errmesg='Unknown message-type "'+msg.type+'"';if(msg.type==="error"){errmesg=msg.msg}const p=document.createElement("p");p.appendChild(document.createTextNode(errmesg));const div=document.getElementById("error");if(div){div.appendChild(p)}else{const div=document.createElement("div");div.id="error";div.style.color="red";const h1=document.createElement("h1");h1.appendChild(document.createTextNode("Error"));div.appendChild(h1);div.appendChild(p);document.body.replaceChildren(div)}break}});export const stack_js={request_access_to_input:function(inputname,inputevents,limittoquestion){const input=document.createElement("input");input.type="hidden";input.id=inputname;DISABLE_CHANGES[inputname]=false;document.body.appendChild(input);input.addEventListener("change",e=>{if(!DISABLE_CHANGES[inputname]){const msg={version:"STACK-JS:1.0.0",type:"changed-input",name:inputname,value:input.value,src:FRAME_ID};CONNECTED.then(()=>{window.parent.postMessage(JSON.stringify(msg),"*")})}});CONNECTED.then(whatever=>{const msg={version:"STACK-JS:1.3.0",type:"register-input-listener",name:inputname,"limit-to-question":false,src:FRAME_ID};if(inputevents===true){msg["track-input"]=true}if(limittoquestion!==undefined){msg["limit-to-question"]=limittoquestion}window.parent.postMessage(JSON.stringify(msg),"*")});return new Promise((resolve,reject)=>{INPUT_PROMISES[inputname]=resolve;setTimeout(()=>{if(inputname in INPUT_PROMISES){reject('No response to input registration of "'+inputname+'" in 5s.')}},5e3)})},register_external_button_listener:function(buttonid,callbackfunction){if(!(buttonid in BUTTON_CALLBACKS)){BUTTON_CALLBACKS[buttonid]=[]}BUTTON_CALLBACKS[buttonid].push(callbackfunction);const msg={version:"STACK-JS:1.2.0",type:"register-button-listener",target:buttonid,src:FRAME_ID};CONNECTED.then(()=>{window.parent.postMessage(JSON.stringify(msg),"*")})},toggle_visibility:function(elementid,show){const msg={version:"STACK-JS:1.0.0",type:"toggle-visibility",target:elementid,set:show?"show":"hide",src:FRAME_ID};CONNECTED.then(()=>{window.parent.postMessage(JSON.stringify(msg),"*")})},switch_content:function(elementid,newcontent){const msg={version:"STACK-JS:1.0.1",type:"change-content",target:elementid,content:newcontent,src:FRAME_ID};CONNECTED.then(()=>{window.parent.postMessage(JSON.stringify(msg),"*")})},get_content:function(elementid){if(elementid in FETCH_PROMISES){return FETCH_PROMISES[elementid]}const msg={version:"STACK-JS:1.1.0",type:"get-content",target:elementid,src:FRAME_ID};CONNECTED.then(()=>{window.parent.postMessage(JSON.stringify(msg),"*")});return new Promise((resolve,reject)=>{FETCH_PROMISES[elementid]=resolve;setTimeout(()=>{if(elementid in FETCH_PROMISES){reject('No response to content fetch of "'+elementid+'" in 5s.')}},5e3)})},resize_containing_frame:function(width,height){const msg={version:"STACK-JS:1.0.0",type:"resize-frame",width:width,height:height,src:FRAME_ID};CONNECTED.then(()=>{window.parent.postMessage(JSON.stringify(msg),"*")})},display_error(errmesg){const p=document.createElement("p");p.appendChild(document.createTextNode(errmesg));const div=document.getElementById("error");if(div){div.appendChild(p)}else{const div=document.createElement("div");div.id="error";div.style.color="red";const h1=document.createElement("h1");h1.appendChild(document.createTextNode("Error"));div.appendChild(h1);div.appendChild(p);document.body.replaceChildren(div)}},has_submit_button:function(){if(SUBMIT_BUTTON!==null){return SUBMIT_BUTTON}SUBMIT_BUTTON=new Promise((resolve,reject)=>{_receive_submit_button=resolve});const msg={version:"STACK-JS:1.3.0",type:"query-submit-button",src:FRAME_ID};CONNECTED.then(()=>{window.parent.postMessage(JSON.stringify(msg),"*")});return SUBMIT_BUTTON},enable_submit_button:function(enabled){const msg={version:"STACK-JS:1.3.0",type:"enable-submit-button",src:FRAME_ID,enabled:enabled};CONNECTED.then(()=>{window.parent.postMessage(JSON.stringify(msg),"*")})},relabel_submit_button:function(name){const msg={version:"STACK-JS:1.3.0",type:"relabel-submit-button",src:FRAME_ID,name:name};CONNECTED.then(()=>{window.parent.postMessage(JSON.stringify(msg),"*")})},clear_input:function(name){const msg={version:"STACK-JS:1.3.0",type:"clear-input",src:FRAME_ID,name:name};CONNECTED.then(()=>{window.parent.postMessage(JSON.stringify(msg),"*")})},get_input_metadata(name){const input=document.getElementById(name);let data={};for(let key in input.dataset){if(key.startsWith("stack")){data[key.substring(5)]=input.dataset[key]}}return data}};export default stack_js;
